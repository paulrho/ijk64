
TOFIX
found 20180126

* c64 DEFFN param should be local
* c64 STR$(-5) should not return leading space
* ask question on exit of changed program
* create a standalone full mp2 like equivalent for timing

c64 INT function should just truncate decimal, still allows very big values
\ kept this as is - matches C64


--
think about this:
you could push Gosubs and Fors onto the acode runtime stack 
  both these stacks are now combined too - so logically it should work
  would alow acode coding of gosub/return for/next
optimise the command parameter list petspeeding (currently it doesnt do it) - for other functions

interesting...
dump in acode and ainstructioncode format the whole execution compilation

DOC
profiling:
java -agentlib:hprof=cpu=samples,depth=100,interval=5,lineno=y,thread=y,file=out.hprof -jar C64.jar -z m.basic -r -x


==============
DONE:
DONE acode MID needs to be copy of eval version
DONE - mid needs 2 and 3 var version, did this by adding params for func
update LSET and others to go on both backing screens

2) GOTO #
   GOSUB #
   IF THEN #
     DONE!!

3) DEF FN - compile it
    (currently marked as reject)
    DONE!!
optimise DEFFN (currently just rejected compile and interpreted)

4) optimise the NEXT - currently string processing -
  at least turn it into near-a-code NEXT [mem] statements (where mem could be -2 (none))
    DONE!!
(these three changes take it from 6800 to 7500 benchmark)

--------------------
not done:
1) FOR -> compile this too!

2) compile IF e THEN A ..... \n B    to e BEQ toB | A ... B - requires compiling both sides initially = maybe redo ALL IF function

3) add ELSE !!!! (search through line looking for :ELSE)

4) make REM truely take no running time after compiling - attempted - looking for a nicer way

5) allow sounds to load off web too

*) F5 to run!

6) allow break from an io (especially net)

7) when you list"prog" and it is not there - it should not do the list

8) make poke198,0 clear the buffer!


9) check the goto gosub ifthen # optimisations to affect edge case (where the next instructions might overlap)
10) check the chained case where you jump into the commands half way through
11) LIST a,b,c=1,2,3  (now does a,b,c=3,2,1 ) - can be done
   but note, this is a unintended language extension that I don't use anyway - 
   could mark it as reject in the meantime





---
END
---
